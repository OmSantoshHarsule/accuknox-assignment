name: Build and Deploy Wisecow to EKS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-south-1
  EKS_CLUSTER_NAME: accuknox_wisecow
  ECR_REPOSITORY: accuknox

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ github.sha }}
      image-uri: ${{ steps.build-image.outputs.image }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker images
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
       
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        
        
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig for EKS
      run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

    - name: Update deployment image
      env:
        IMAGE_URI: ${{ needs.build-and-push.outputs.image-uri }}
      run: |
        # Update deployment.yaml with new image
        sed -i "s|image: omsantoshharsule/wisecow:latest|image: $IMAGE_URI|g" k8s/03-deployment.yaml
        
        # Apply all manifests
        kubectl apply -f k8s/1-namespace.yaml
        kubectl apply -f k8s/2-cert-issuer.yaml
        kubectl apply -f k8s/3-deployment.yaml
        kubectl apply -f k8s/4-service.yaml
        kubectl apply -f k8s/5-ingress.yaml

    - name: Wait for deployment
      run: |
        kubectl wait --for=condition=available --timeout=300s deployment/wisecow-deployment -n wisecow
        kubectl get pods -n wisecow
        kubectl get svc -n wisecow
        kubectl get ingress -n wisecow

    - name: Get application URL
      run: |
        echo "Application deployed successfully!"
        kubectl get ingress wisecow-ingress -n wisecow
